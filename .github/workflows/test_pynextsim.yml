name: Test Pynextsim

on:
  workflow_dispatch:
    inputs:
      pynextsim_ref:
        description: 'Branch name of pynextsim repo'     
        required: true
        default: 'master'

jobs:
  test:
    env:
      NEXTSIM_TEST_DATA_DIR: /test_data
      PYTHONPATH: "/home/runner/work/test_pynextsimf/test_pynextsimf/nextsim-tools/python"
    runs-on: ubuntu-latest
    container:
      image: nansencenter/pynextsim_testing:latest
      env:
        NEXTSIM_TEST_DATA_DIR: ${{ env.TEST_DATA_DIR }}
    steps:
      - name: Print inputs
        run: |
          echo "${{ github.event.inputs.pynextsim_ref }}"
      - name: Cache
        uses: actions/cache@v2
        with:
          path: ${{ env.NEXTSIM_TEST_DATA_DIR }}
          key: 2
        id: cache
      - name: Download test data
        run : |
          mkdir -p $NEXTSIM_TEST_DATA_DIR
          wget -O $NEXTSIM_TEST_DATA_DIR/test_data.tgz ftp://ftp.nersc.no/nextsimf/test_data.tgz #gdown https://drive.google.com/uc?id=1DIBBAczt7NaGo5snb-lDfJ8YCRdhEK5Z -O $NEXTSIM_TEST_DATA_DIR/
          tar -xvf $NEXTSIM_TEST_DATA_DIR/test_data.tgz -C $NEXTSIM_TEST_DATA_DIR/
          mv $NEXTSIM_TEST_DATA_DIR/test_data/* $NEXTSIM_TEST_DATA_DIR/
          rm $NEXTSIM_TEST_DATA_DIR/test_data.tgz
          ls -al $NEXTSIM_TEST_DATA_DIR/
        if: steps.cache.outputs.cache-hit != 'true'
      - uses: actions/checkout@v2
        with:
          repository: nansencenter/nextsim-tools
          token: ${{ secrets.ACCESS_TOKEN }}
          path: nextsim-tools
          ref: ${{ github.event.inputs.pynextsim_ref }}
      - name: List current dir
        run: |
          ls -al 
          ls -al nextsim-tools
      - name: Test pynextsim
        run: python -m pytest nextsim-tools/python/pynextsim/tests
